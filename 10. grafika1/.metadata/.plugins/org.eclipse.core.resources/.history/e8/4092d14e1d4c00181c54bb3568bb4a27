package controller;


import java.io.IOException;
import java.util.ArrayList;
import java.util.Timer;
import java.util.TimerTask;

import data.Data;
import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ListView;
import sokoban.Navigator;


public class LobbyController {

@FXML
public ListView listview_players;

@FXML
public Button button_megse;

@FXML
public Button button_start;


	public void onButtonDownAction(ActionEvent actionEvent) {
	    if (actionEvent.getSource() == button_start) {
	     /*   if (textfield_jatekos1nev.getText().isEmpty() || textfield_jatekos2nev.getText().isEmpty() || textfield_port.getText().isEmpty() || combobox_palyavalaszto.getValue().isEmpty()) {
	            Alert alert = new Alert(Alert.AlertType.INFORMATION);
	            alert.setTitle("Hi√°nyos adatok!");
	            alert.setHeaderText(null);
	            alert.setContentText("Nem adott meg minden adatot!");
	            alert.show();
	            return;
	        } else {
	            Data.jatek.FutSzerver(textfield_jatekos1nev.getText(), textfield_jatekos2nev.getText(), textfield_port.getText(), combobox_palyavalaszto.getValue());
	            try {
	            Parent root = FXMLLoader.load(getClass().getResource("/data/resources/layout/GameView.fxml"));
	            Navigator.navigate(root);
	            } catch (Exception e) {}
	        }*/
	    } else if (actionEvent.getSource() == button_megse) {
	        try {
	            Parent root = FXMLLoader.load(getClass().getResource("/data/resources/layout/MenuView.fxml"));
	            Navigator.navigate(root);
	        } catch (IOException e) {
	            e.printStackTrace();
	        }
	    }
	}
	

	public LobbyController() 
	{
		Timer timer = new Timer();
		timer.schedule(new TimerTask() {
			@Override
			  public void run() {
				updateList();
			  }
			}, (long)2*60*1000);
	}
	
	private void updateList() 
	{
		ObservableList<String> values = (ObservableList<String>)Data.jatek.getNevLista();
		
		listview_players.getItems().clear();
		
		listview_players.setItems(values);
	}
}
