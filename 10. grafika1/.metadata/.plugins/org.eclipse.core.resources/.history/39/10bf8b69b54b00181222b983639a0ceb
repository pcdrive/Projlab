/**
 * A KillerSokoban egy jatek, ahol a jatekos egy raktari munkast alakit.
 * A cel, hogy minden mas jatekosnal tobb megjelolt ladat tolj a helyere.
 *
 * @author Horvath Gergo
 * @author Mocsari Andras
 * @author Zsiros Balint
 * @author Bottlik Judit
 * @author Holub Csongor
 * @version 1.0
 * @since 2018-02-09
 */


package sokoban.mezok;

import Tools.Printer;
import sokoban.*;
import sokoban.leptethetok.Doboz;
import sokoban.leptethetok.Jatekos;
import sokoban.leptethetok.JeloltDoboz;
import sokoban.leptethetok.Leptetheto;

public class UresMezo {

    protected Leptetheto leptetheto;
    private UresMezo szomszed[];
    
    protected float surlodas;
    protected int olaj;
    protected int mez;
    protected int mezoTipus;

    /**
     * Az osztaly konstruktora. beallï¿½tja az alapertekeket.
     */
    public UresMezo() {
        szomszed = new UresMezo[4];
        surlodas = 0.5f;
        olaj = 0;
        mez = 0;
        mezoTipus = 0;
    }

    /**
     * A fogad fuggveny kezeli a leptetheto objektumok mezore lepeset, es a
     * mar mezon levo dolgok utkozeset. A jelen lepest vegzo jatekos nevet
     * tovabbitjuk a megtolt objektum fele, hogy a megfelelo jatekos kaphassa
     * a pontot erte.
     *
     * @param ero    az ero amivel a jatekos a sort megtolta.
     * @param i  Irany amerre az esetleges mezon levo dolgot tolni kell
     * @param jd JeloltDoboz, ami a mezore kivan lepni
     * @param j  Jatekos, aki lepest tette.
     * 
     * @return boolean Annak az erteke, hogy a lepni kivano objektum elvegezheti-e a lepest
     */
    public boolean Fogad(float ero, Irany i, JeloltDoboz jd, Jatekos j) {
        Printer.PrintTabIn("UresMezo" + '\t' + "Fogad(Irany, JeloltDoboz, Jatekos)");
        if (leptetheto == null) {
            Printer.PrintTabOut("Return: " + Boolean.toString(true));
            leptetheto = jd;
            return true;
        }
        boolean success = leptetheto.Utkozik(ero, surlodas, i, j);
        if (success) {
            leptetheto = jd;
        }
        Printer.PrintTabOut("Return: " + Boolean.toString(success));
        return success;
    }

    /**
     * A fogad fuggveny kezeli a leptetheto objektumok mezore lepeset, es a
     * mar mezon levo dolgok utkozeset. A jelen lepest vegzo jatekos nevet
     * tovabbitjuk a megtolt objektum fele, hogy a megfelelo jatekos kaphassa
     * a pontot erte.
     *
     * @param ero    az ero amivel a jatekos a sort megtolta.
     * @param i    Irany amerre az esetleges mezon levo dolgot tolni kell
     * @param aktj Jatekos, ami a mezore kivan lepni
     * @param j    Jatekos, aki lepest tette.
     * 
     * @return boolean Annak az erteke, hogy a lepni kivano objektum elvegezheti-e a lepest
     */
    public boolean Fogad(float ero, Irany i, Jatekos aktj, Jatekos j) {
        Printer.PrintTabIn("UresMezo" + '\t' + "Fogad(Irany, Jatekos, Jatekos)");
        if (leptetheto == null) {
            Printer.PrintTabOut("Return: " + Boolean.toString(true));
            leptetheto = aktj;
            return true;
        }
        boolean success = leptetheto.Tol(ero, surlodas, i, j);
        if (success) {
            leptetheto = aktj;
        }
        Printer.PrintTabOut("Return: " + Boolean.toString(success));
        return success;
    }

    /**
     * A fogad fuggveny kezeli a leptetheto objektumok mezore lepeset, es a
     * mar mezon levo dolgok utkozeset. A jelen lepest vegzo jatekos nevet
     * tovabbitjuk a megtolt objektum fele, hogy a megfelelo jatekos kaphassa
     * a pontot erte.
     *
     * @param ero    az ero amivel a jatekos a sort megtolta.
     * @param i Irany amerre az esetleges mezon levo dolgot tolni kell
     * @param d Doboz, ami a mezore kivan lepni
     * @param j Jatekos, aki lepest tette.
     * 
     * @return boolean Annak az erteke, hogy a lepni kivano objektum elvegezheti-e a lepest
     */
    public boolean Fogad(float ero, Irany i, Doboz d, Jatekos j) {
        Printer.PrintTabIn("UresMezo" + '\t' + "Fogad(Irany, Doboz, Jatekos)");
        if (leptetheto == null) {
            Printer.PrintTabOut("Return: " + Boolean.toString(true));
            leptetheto = d;
            return true;
        }
        boolean success = leptetheto.Utkozik(ero, surlodas, i, j);
        if (success) {
            leptetheto = d;
        }
        Printer.PrintTabOut("Return: " + Boolean.toString(success));
        return success;
    }

    /**
     * Elengedi a leptethetot, amikor az ellep a mezorol.
     */
    public void Enged() {
        Printer.PrintTabIn("UresMezo" + '\t' + "Enged()");
        leptetheto = null;
        Printer.PrintTabOut("Return");
    }

    /**
     * Megadja a szomszedos mezot az adott iranyba.
     *
     * @param i Az irany amiben a szomszedos mezot keressuk.
     * 
     * @return UresMezo A szomszedos mezo.
     */
    public UresMezo GetSzomszed(Irany i) {
        Printer.PrintTabIn("UresMezo" + '\t' + "GetSzomszed(Irany)");
        Printer.PrintTabOut("Return: " + szomszed[i.ordinal()]);
        return szomszed[i.ordinal()];
    }

    /**
     * Beallitja a szomszedos mezot az adott iranyba.
     *
     * @param i Az irany amiben a szomszedos mezot keressuk.
     * @param u A mezo amit beallitunk.
     */
    public void SetSzomszed(Irany i, UresMezo u) {
        Printer.PrintTabIn("UresMezo" + '\t' + "SetSzomszed(Irany, UresMezo)");
        szomszed[i.ordinal()] = u;
        Printer.PrintTabOut("Return");
    }
    
    public boolean Vege(Irany i) 
    {
        Printer.PrintTabIn("UresMezo" + '\t' + "Vege()");
    	if (leptetheto == null) 
    	{
            Printer.PrintTabOut("Return: true");
    		return true;
    	} else
    	{
    		boolean success = leptetheto.Vege(i);

            Printer.PrintTabOut("Return: " + success);
            
            return success;
    	}
    	
    }

    /**
     * Olajositja a mezot. Jobban csuszik tole.
     */
    public void AddOlaj() 
    {
        Printer.PrintTabIn("AddOlaj()");
        if (olaj<9) {
        	olaj++;
        	surlodas*=0.8f;
    	}
        Printer.PrintTabOut("return");
    }
    
    /**
     * Mezesiti a mezot. Jobban tapad tole.
     */
    public void AddMez() 
    {
        Printer.PrintTabIn("AddMez()");
        if (mez<9) {
        	mez++;
        	surlodas*=1.2f;
        }
        Printer.PrintTabOut("return");
    }

    /**
     * A mezo surlodasat adja vissza.
     * 
     * @return float Annak az erteke, hogy mekkora a mezo surlodasa.
     */
    public float getSurl() {return surlodas;}

    /**
     * Visszaadja a mezo aktualis ID azonositojat.
     * 
     * @return int ID szama.
     */
    public int getID(){
        return (leptetheto != null ? leptetheto.getTipus() * 10000000 : 0) + (leptetheto != null ? leptetheto.getStatus() * 100000 : 0) + mezoTipus * 1000 + mez * 10 + olaj;
    }

}
